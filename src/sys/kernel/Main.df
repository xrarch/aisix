#include "<df>/dragonfruit.h"
#include "<inc>/kernel.h"

extern PMMInit { -- }
extern HeapInit { -- }
extern PlatformInit { -- }
extern ThreadInit { -- }
extern BlockInit { -- }

extern HeapDump { -- }

extern Scheduler { -- }

extern KLogInit { -- }

fn AISIX { ksz args -- ret }
	0 ret!

	PMMInit

	HeapInit

	args@ ArgsInit

	KLogInit

	"AISIX coming up\n" Printf
	"written by Will <http://github.com/seanbox> for the LIMNstation project\n" Printf
	ksz@ "kernel image ~%d bytes\n\n" Printf

	MachineInfo

	PlatformInit

	BlockInit

	ThreadInit

	Scheduler

	(* the scheduler loop shouldn't return, but if it does, drop back out here *)
end

extern VFSInit { -- }

extern VFSMountRoot { -- }

var Done 0

var TestIOBuf 0

extern ConsInit { -- }

extern VConsInit { -- }

fn AISIXInitialThread { -- }
	"initial thread was switched to successfully\n" Printf

	VFSInit

	VConsInit

	ConsInit

	VFSMountRoot

	auto vnode
	"/etc/init" VFSPath vnode!

	if (vnode@ iserr)
		vnode@ abs vnode!
		[vnode@]ErrorNames@ "couldn't load /etc/init: %s\n" Panic
	end

	vnode@ "/etc/init" VSpawn InitProcess!

	if (InitProcess@ iserr)
		InitProcess@ abs InitProcess!
		[InitProcess@]ErrorNames@ "couldn't exec /etc/init: %s\n" Printf
	end

	vnode@ VNodePut

	while (1) end
end