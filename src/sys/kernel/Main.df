#include "<df>/dragonfruit.h"
#include "<inc>/kernel.h"

extern PMMInit { -- }
extern HeapInit { -- }
extern PlatformInit { -- }
extern ThreadInit { -- }

extern HeapDump { -- }

extern Scheduler { -- }

fn AISIX { ksz args -- ret }
	0 ret!

	"aisix coming up\n" Printf
	ksz@ "kernel image ~%d bytes\n" Printf

	MachineInfo

	PMMInit

	HeapInit

	args@ ArgsInit

	PlatformInit

	ThreadInit

	Scheduler

	(* the scheduler loop shouldn't return, but if it does, drop back out here *)
end

extern VFSInit { -- }

var Done 0

fn AISIXInitialThread { -- }
	"initial thread was switched to successfully\n" Printf

	VFSInit

	auto zonk

	pointerof Thread2 "thread2" KernelThreadNew zonk!

	zonk@ ThreadReady

	pointerof Thread3 "thread3" KernelThreadNew ThreadReady

	while (Getc ERR ==) end

	2 Done!

	while (Done@) end

	"done\n" Printf

	auto buf
	256 Malloc buf!

	while (1)
		buf@ 255 Gets

		auto vnode

		buf@ VFSPath vnode!

		if (vnode@ iserr)
			vnode@ abs vnode!
			[vnode@]ErrorNames@ "%s\n" Printf
		end else
			auto m
			vnode@ VNode_Mount + @ m!

			vnode@ VNodePut

			m@ Mount_VRefs + @ "%d\n" Printf
			m@ Mount_MRefs + @ "%d\n" Printf

			m@ VFSUnmount vnode!

			if (vnode@ iserr)
				vnode@ abs vnode!
				[vnode@]ErrorNames@ "unmount: %s\n" Printf
			end
		end 
	end
end

fn Thread2 { -- }
	while (1)
		if (Done@)
			1 Done -=

			ThreadExit
		end

		auto vn

		"/dev/serial0" VFSPath vn!

		if (vn@ iserr)
			vn@ abs vn!
			[vn@]ErrorNames@ "%s\n" Printf
		end else
			vn@ VNodePut
		end

		Yield
	end
end

fn Thread3 { -- }
	while (1)
		if (Done@)
			1 Done -=

			ThreadExit
		end

		auto vn

		"/dev/serial0" VFSPath vn!

		if (vn@ iserr)
			vn@ abs vn!
			[vn@]ErrorNames@ "%s\n" Printf
		end else
			vn@ VNodePut
		end

		Yield
	end
end