#include "<df>/dragonfruit.h"
#include "<inc>/kernel.h"

extern PMMInit { -- }
extern HeapInit { -- }
extern PlatformInit { -- }
extern ThreadInit { -- }
extern BlockInit { -- }

extern HeapDump { -- }

extern Scheduler { -- }

extern KLogInit { -- }

fn AISIX { ksz args -- ret }
	0 ret!

	PMMInit

	HeapInit

	args@ ArgsInit

	KLogInit

	"AISIX coming up\n" Printf
	"written by Will <http://github.com/seanbox> for the LIMNstation project\n" Printf
	ksz@ "kernel image ~%d bytes\n\n" Printf

	MachineInfo

	PlatformInit

	BlockInit

	ThreadInit

	Scheduler

	(* the scheduler loop shouldn't return, but if it does, drop back out here *)
end

extern VFSInit { -- }

extern VFSMountRoot { -- }

var Done 0

var TestIOBuf 0

extern ConsInit { -- }

extern VConsInit { -- }

fn AISIXInitialThread { -- }
	"initial thread was switched to successfully\n" Printf

	VFSInit

	VConsInit

	ConsInit

	VFSMountRoot

	auto userin
	256 Malloc userin!

	while (1)
		auto seek
		"seek: " Printf
		userin@ 255 Gets
		userin@ atoi seek!

		auto len
		"len: " Printf
		userin@ 255 Gets
		userin@ atoi len!

		if (len@ ~~)
			continue
		end

		auto qb
		len@ Malloc qb!

		"what: " Printf
		qb@ len@ 1 - Gets

		"path: " Printf
		userin@ 255 Gets

		auto vnode

		userin@ VFSPath vnode!

		auto bytes

		if (vnode@ iserr)
			vnode@ abs vnode!
			[vnode@]ErrorNames@ "path: %s\n" Printf
		end else
			qb@ len@ seek@ vnode@ VRead bytes!

			if (bytes@ iserr)
				bytes@ abs bytes!
				[bytes@]ErrorNames@ "read: %s\n" Printf
			end else
				bytes@ "%d bytes read:\n" Printf

				auto i
				0 i!

				while (i@ bytes@ <)
					qb@ i@ + gb Putc

					1 i +=
				end

				'\n' Putc
			end

			vnode@ VNodePut
		end

		qb@ Free
	end
end