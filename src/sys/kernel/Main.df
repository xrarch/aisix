#include "<df>/dragonfruit.h"
#include "<inc>/kernel.h"

extern PMMInit { -- }
extern HeapInit { -- }
extern PlatformInit { -- }
extern ThreadInit { -- }
extern BlockInit { -- }

extern HeapDump { -- }

extern Scheduler { -- }

extern KLogInit { -- }

extern TriviaTable { ksz -- }

fn AISIX { ksz args -- ret }
	0 ret!

	PMMInit

	HeapInit

	args@ ArgsInit

	KLogInit

	"\[[33mAISIX is preparing your system\[[0m\n" Printf

	PlatformInit

	BlockInit

	ThreadInit

	ksz@ TriviaTable

	Scheduler

	(* the scheduler loop shouldn't return, but if it does, drop back out here *)
end

extern VFSInit { -- }

extern VFSMountRoot { -- }

extern VCacheInit { -- }

extern ConsInit { -- }

extern VConsInit { -- }

extern CPUHlt { -- }

fn AISIXInitialThread { -- }
	VCacheInit

	VFSInit

	VConsInit

	ConsInit

	VFSMountRoot

	'\n' Putc

	auto vnode
	"/sys/bin/init" VFSPath vnode!

	if (vnode@ iserr)
		vnode@ abs vnode!
		[vnode@]ErrorNames@ "couldn't open /sys/bin/init: %s\n" Panic
	end else
		vnode@ VNodeUnlock

		vnode@ "/sys/bin/init" 0 0 0 NP_INHERIT 0 0 VNewProcess InitProcess!

		vnode@ VNodeUnref

		if (InitProcess@ iserr)
			InitProcess@ abs InitProcess!
			[InitProcess@]ErrorNames@ "couldn't spawn /sys/bin/init: %s\n" Panic
		end
	end

	(* become an idle thread *)
	while (1)
		CPUHlt
		Yield
	end
end