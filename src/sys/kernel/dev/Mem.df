#include "<df>/dragonfruit.h"
#include "<inc>/kernel.h"

table MemDriver
	"mem"
	DEV_CHAR
	pointerof MemOpen
	pointerof MemClose
	pointerof MemIoctl
	pointerof MemRead
	pointerof MemWrite
	pointerof MemSysctl
endtable
public MemDriver

fn (DevSysctl) MemSysctl { op1 op2 op3 op4 unit -- ok }
	-ENOTBLK ok!
end

fn (DevOpen) MemOpen { unit -- ok }
	0 ok!
end

fn (DevClose) MemClose { unit -- ok }
	0 ok!
end

fn (DevIoctl) MemIoctl { op1 op2 op3 op4 unit -- ok }
	0 ok!
end

fn (DevRead) MemRead { pm buf len unit seek -- bytes }
	if (unit@ 0 ==) (* /dev/null *)
		0 bytes!
		return
	end elseif (unit@ 1 ==) (* /dev/zero *)
		pm@ buf@ len@ 0 VMMemset bytes!

		if (bytes@ iserr ~~)
			len@ bytes!
		end

		return
	end elseif (unit@ 2 ==) (* /dev/mem *)
		auto m
		0 m!

		if (seek@ 0x1000 <) (* avoid page 0 *)
			0x1000 seek@ - len@ min m!

			pm@ buf@ m@ 0 VMMemset bytes!

			if (bytes@ iserr)
				return
			end

			0x1000 seek!
			m@ buf +=
			m@ len -=

			if (len@ 0 ==)
				m@ bytes!
				return
			end
		end

		pm@ buf@ seek@ len@ VMCopyout bytes!

		if (bytes@ iserr ~~)
			len@ m@ + bytes!
		end

		return
	end elseif (unit@ 3 ==) (* /dev/full *)
		0 bytes!
		return
	end
end

fn (DevWrite) MemWrite { pm buf len unit seek -- bytes }
	if (unit@ 0 ==) (* /dev/null *)
		0 bytes!
		return
	end elseif (unit@ 1 ==) (* /dev/zero *)
		len@ bytes!
		return
	end elseif (unit@ 2 ==) (* /dev/mem *)
		auto m
		0 m!

		if (seek@ 0x1000 <)
			0x1000 seek@ - len@ min m!

			0x1000 seek!
			m@ buf +=
			m@ len -=

			if (len@ 0 ==)
				m@ bytes!
				return
			end
		end

		pm@ seek@ buf@ len@ VMCopyin bytes!

		if (bytes@ iserr ~~)
			m@ len@ + bytes!
		end

		return
	end elseif (unit@ 3 ==) (* /dev/full *)
		-ENOSPC bytes!
		return
	end
end