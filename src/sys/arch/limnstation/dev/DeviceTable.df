#include "<df>/dragonfruit.h"
#include "<ll>/rta3x/a3x.h"
#include "<inc>/kernel.h"

extern DrvCitronFoundNode { node -- }
extern DrvDMAFoundNode { node -- }
extern DrvLSICFoundNode { node -- }
extern DrvSerialFoundNode { node -- }
extern DrvClockFoundNode { node -- }
extern DrvDKSFoundNode { node -- }
extern DrvDKSLogicalFoundNode { node -- }
extern DrvLGFXFoundNode { node -- }
extern DrvAmtsuFoundNode { node -- }
extern DrvKeybdFoundNode { node -- }

fnptr FoundNode { node -- }

externptr DMAFound

externptr LSICFound

externptr AmtsuFound

const Devices 10

const ElemPerDevice 5

(*  NAME     TYPE                     MODEL               REV *)
table DeviceTable
	"citron" "bus"                    "AISA,citron"       1
	pointerof DrvCitronFoundNode

	"dma"    "dma-controller"         "AISA,ebus-dma"     1
	pointerof DrvDMAFoundNode

    "lsic"   "interrupt-controller"   "AISA,lsic"         1
    pointerof DrvLSICFoundNode

    "serial" "serial"                 "AISA,serial-port"  1
    pointerof DrvSerialFoundNode

    "clock"  "rtc"                    "AISA,clock"        1
    pointerof DrvClockFoundNode

    "dks"    "disk"                   "AISA,satsuma-disk" 1
    pointerof DrvDKSFoundNode

    "dks"    "disk-logical"           "AISA,satsuma-disk" 1
    pointerof DrvDKSLogicalFoundNode

    "lgfx"   "display"                "AISA,limngfx"      1
    pointerof DrvLGFXFoundNode

    "amtsu"  "bus"                    "AISA,amanatsu"     1
    pointerof DrvAmtsuFoundNode

    "keybd"  "keyboard"               "AISA,keyboard"     1
    pointerof DrvKeybdFoundNode
endtable
public DeviceTable

fn private CheckDevTable { -- }
	auto i
	0 i!

	while (i@ Devices <)
		auto tbase
		i@ ElemPerDevice * tbase!

		auto dt
		"deviceType" a3xDGetProperty dt!

		if (dt@ 0 ==)
			1 i +=
			continue
		end

		if (dt@ [tbase@ 1 +]DeviceTable@ strcmp ~~)
			1 i +=
			continue
		end

		auto model
		"model" a3xDGetProperty model!

		if (model@ 0 ==)
			1 i +=
			continue
		end

		if (model@ [tbase@ 2 +]DeviceTable@ strcmp ~~)
			1 i +=
			continue
		end

		auto rev
		"revision" a3xDGetProperty rev!

		if (rev@ [tbase@ 3 +]DeviceTable@ ~=)
			[tbase@]DeviceTable@ a3xDGetName "identified node '%s' with driver '%s'\n" Printf

			auto ans
			rev@ [tbase@ 3 +]DeviceTable@ "  revision mismatch (have driver for %d, got %d) register anyway? [y/n] " 1 AskUser ans!

			if (ans@ gb 'y' ~=)
				ans@ Free

				1 i +=
				continue
			end

			ans@ Free
		end

		model@ dt@ "\t%s: %s: " Printf

		a3xDGetCurrent [tbase@ 4 +]DeviceTable@ FoundNode

		'\n' Putc

		break
	end
end

fn private IterateNode { iter -- }
	while (iter@)
		iter@ a3xDevIterate iter!
			CheckDevTable

			a3xDevIteratorInit IterateNode
		a3xDeviceExit
	end
end

fn DeviceTree { -- }
	"enumerating device tree\n" Printf

	"/platform" a3xDeviceSelect
		a3xDevIteratorInit IterateNode
	a3xDeviceExit

	if (LSICFound@ ~~)
		"couldn't find LSIC node!\n" Panic
	end

	if (DMAFound@ ~~)
		"couldn't find DMA node!\n" Panic
	end

	if (AmtsuFound@ ~~)
		"couldn't find amanatsu bus node!\n" Panic
	end
end