#include "<df>/dragonfruit.h"
#include "<inc>/mk.h"

struct Service
	64 Name
	4 Process
endstruct

var ServiceList 0

var ServiceIRQMap 0

extern PlatformFaultsInit

extern ProcessByPID

procedure ServiceInit (* -- *)
	ListCreate ServiceList!

	1 PMMAlloc ServiceIRQMap!

	if (ServiceIRQMap@ -1 ==)
		"couldn't allocate service IRQ map\n" Panic
	end

	ServiceIRQMap@ 4096 0 memset

	PlatformFaultsInit
end

externconst InitProc (* var *)

extern ReparentOrphans

procedure ServiceAdd { name pid -- ok }
	if (ServiceList@ 0 ==)
		"ServiceAdd\n" Panic
	end

	if (name@ ServiceByName -1 ~=)
		-1 ok!
		return
	end

	auto service
	Service_SIZEOF Calloc service!

	if (service@ ERR ==)
		"ServiceAdd: couldn't allocate service\n" Panic
	end

	auto proc
	pid@ ProcessByPID proc!

	if (proc@ -1 ==)
		"ServiceAdd: phony pid\n" Panic
	end

	if (InitProc@ 0 ==)
		if (name@ "init" strcmp)
			proc@ InitProc!

			if (InitProc@ -1 ==)
				"ServiceAdd: init isnt init!\n" Panic
			end

			ReparentOrphans
		end
	end

	service@ Service_Name + name@ 63 strncpy
	proc@ service@ Service_Process + !

	service@ proc@ Process_Service + !

	service@ ServiceList@ ListInsert

	1 ok!
end

procedure ServiceByName { name -- pid }
	if (ServiceList@ 0 ==)
		"ServiceByName\n" Panic
	end

	auto n
	ServiceList@ ListHead n!

	while (n@ 0 ~=)
		auto pnode
		n@ ListNodeValue
		pnode!

		if (pnode@ Service_Name + name@ strcmp)
			pnode@ Service_Process + @ Process_ProcessID + @ pid!
			return
		end

		n@ ListNodeNext n!
	end

	-1 pid!
end

extern PlatformInterruptRegister

extern PlatformMaskIRQ

procedure ServiceInterruptRegister { proc irq -- }
	pointerof ServiceKernelEntry irq@ PlatformInterruptRegister

	proc@ irq@ 4 * ServiceIRQMap@ + !
end

procedure ServiceKernelEntry { irq -- }
	auto proc
	irq@ 4 * ServiceIRQMap@ + @ proc!

	if (proc@ 0 ==)
		irq@ "ServiceKernelEntry: no service for IRQ %x!\n" Panic
	end

	irq@ PlatformMaskIRQ

	"implement service messaging\n" Panic
end