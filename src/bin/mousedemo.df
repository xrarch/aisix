#include "<df>/dragonfruit.h"
#include "<ll>/rtaisix/aisix.h"

struct MousePacket
	4 Event
	4 Info1
	4 Info2
endstruct

const MOUSEPRESS 1
const MOUSERELEASE 2
const MOUSEMOVE 3

table EventNames
	0
	"press"
	"release"
	"move"
endtable

buffer MouseEventBuf MousePacket_SIZEOF

buffer Prompt 256

var FBFD 0

var XRes 0
var YRes 0

const BOXROWS 8
const BOXCOLS 8

buffer RowBuf (BOXROWS 2 *)

fn FastInvert { buf -- } // actually slow
	auto i
	0 i!

	while (i@ BOXCOLS 2 * <)
		buf@@ ~ buf@!

		4 buf +=
		4 i +=
	end
end

fn InvertBox { x y -- }
	auto i
	0 i!

	auto base
	y@ XRes@ * 2 * x@ 2 * + base!

	auto mod
	XRes@ 2 * mod!

	auto rbase

	0 i!

	auto bl
	RowBuf bl!

	base@ rbase!

	while (i@ BOXROWS <)
		FBFD@ rbase@ SEEK_SET Seek drop

		bl@ BOXCOLS 2 * FBFD@ Read drop

		bl@ FastInvert

		FBFD@ rbase@ SEEK_SET Seek drop

		bl@ BOXCOLS 2 * FBFD@ Write drop

		mod@ rbase +=
		1 i +=
	end
end

fn Main { ... -- ret }
	auto mousefd
	"/dev/mouse0" O_READ Open mousefd!

	if (mousefd@ iserr)
		mousefd@ abs mousefd!
		[mousefd@]ErrorNames@ "mousedemo: couldn't open /dev/mouse0: %s\n" Abort
	end

	auto fbfd
	"/dev/fb0" O_RW Open fbfd!

	if (fbfd@ iserr)
		fbfd@ abs fbfd!
		[fbfd@]ErrorNames@ "mousedemo: couldn't open /dev/fb0: %s\n" Abort
	end
	
	fbfd@ FBFD!

	"screen xres [1024]: " Printf
	Prompt 255 Gets

	if (Prompt strlen 0 ==)
		1024 XRes!
	end else
		Prompt atoi XRes!
	end

	"screen yres [768]: " Printf
	Prompt 255 Gets

	if (Prompt strlen 0 ==)
		768 YRes!
	end else
		Prompt atoi YRes!
	end

	auto mouseX
	20 mouseX!

	auto mouseY
	20 mouseY!

	mouseX@ mouseY@ InvertBox

	auto bytes

	auto rcur
	1 rcur!

	auto buf
	MouseEventBuf buf!

	while (1)
		buf@ MousePacket_SIZEOF mousefd@ Read bytes!
		if (bytes@ iserr)
			bytes@ abs bytes!
			[bytes@]ErrorNames@ "mousedemo: couldn't read /dev/mouse0: %s\n" Abort
		end

		if (bytes@ MousePacket_SIZEOF <)
			"mousedemo: couldn't read full packet\n" Abort
		end

		if (buf@ MousePacket_Event + @ MOUSEMOVE ==)
			if (rcur@)
				mouseX@ mouseY@ InvertBox
			end

			auto dx
			buf@ MousePacket_Info1 + @ dx!

			auto dy
			buf@ MousePacket_Info2 + @ dy!

			dy@ mouseY +=
			dx@ mouseX +=

			if (mouseX@ 0 s<)
				0 mouseX!
			end elseif (mouseX@ XRes@ s>=)
				XRes@ 1 - mouseX!
			end

			if (mouseY@ 0 s<)
				0 mouseY!
			end elseif (mouseY@ YRes@ s>=)
				YRes@ 1 - mouseY!
			end

			mouseX@ mouseY@ InvertBox
		end elseif (buf@ MousePacket_Event + @ MOUSEPRESS ==)
			0 rcur!
		end elseif (buf@ MousePacket_Event + @ MOUSERELEASE ==)
			1 rcur!
		end
	end

	0 ret!
end