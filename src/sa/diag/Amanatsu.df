#include "<df>/dragonfruit.h"

#include "citron.h"

const AmaPortDev 0x30
const AmaPortMID 0x31
const AmaPortCMD 0x32
const AmaPortA 0x33
const AmaPortB 0x34
const AmaDevs 16

const AmaIDN 3
table AmaIDs
	0x00000000 "EMPTY"
	0x4D4F5553 "AISA Mouse"
	0x8FC48FC4 "AISA Keyboard"
endtable

(* disabling and restoring interrupts is up to the user of these functions *)

fn AmanatsuPoll { num -- mid }
	num@ AmanatsuSelectDev AmanatsuReadMID mid!
end

fn AmanatsuSelectDev { num -- }
	num@ AmaPortDev DCitronOutb
end

fn AmanatsuReadMID { -- mid }
	AmaPortMID DCitronInl mid!
end

fn AmanatsuCommand { cmd -- }
	cmd@ AmaPortCMD DCitronOutl

	while (AmaPortCMD DCitronInl 0 ~=) end
end

fn AmanatsuCommandAsync { cmd -- }
	cmd@ AmaPortCMD DCitronOutl
end

fn AmanatsuWriteA { long -- }
	long@ AmaPortA DCitronOutl
end

fn AmanatsuWriteB { long -- }
	long@ AmaPortB DCitronOutl
end

fn AmanatsuReadA { -- long }
	AmaPortA DCitronInl long!
end

fn AmanatsuReadB { -- long }
	AmaPortB DCitronInl long!
end

fn AmanatsuIDtoLabel { id -- label }
	auto i
	0 i!

	auto p
	AmaIDs p!
	
	while (i@ AmaIDN <)
		if (p@ @ id@ ==)
			p@ 4 + @ label! return
		end

		8 p +=
		1 i +=
	end

	"unknown" label!
end

fn AmanatsuDump { -- }
	auto i
	1 i!

	"== amanatsu dump ==\n\tUNIT\tMID\t\tTYPE\n" Printf

	"\t0\t00000000\tCONTROLLER\n" Printf

	while (i@ AmaDevs <)
		auto mid
		i@ AmanatsuPoll mid!

		if (mid@ 0 ~=)
			mid@ AmanatsuIDtoLabel mid@ i@ "\t%d\t%x\t%s\n" Printf
		end

		1 i +=
	end

	'\n' Putc
end